openapi: 3.0.0

info:
  title: ToDo List API
  description: The API Documentation for the ToDo List Application
  version: '1.0'

servers:
  - description: Local Development
    url: "todo-list.loc/api"

security:
  - bearerAuth: []

paths:
  /register:
    post:
      tags:
        - Auth
      summary: Register a new user
      responses:
        200:
          description: Access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        422:
          description: Validation not passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error_Auth'
  /login:
    post:
      tags:
        - Auth
      summary: Login from a new device. Creates access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - password
                - email
              properties:
                password:
                  type: string
                  example: 12345678
                email:
                  type: string
                  example: email@gmail.com
      responses:
        200:
          description: Access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error_Auth'
  /tasks:
    get:
      tags:
        - Task
      summary: Get all tasks
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
    post:
      tags:
        - Task
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - description
                - due_date
              properties:
                title:
                  type: string
                  example: New task
                description:
                  type: string
                  example: Description of the task
                due_date:
                  type: string
                  example: 2025-03-01 11:21:00
      responses:
        201:
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
        422:
          description: Validation not passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error'
  /tasks/{id}:
    delete:
      tags:
        - Task
      summary: Destroy task
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
      responses:
        204:
          description: Task deleted successfully
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
    put:
      tags:
        - Task
      summary: Update task
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
      responses:
        200:
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
        422:
          description: Validation not passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
          example: 2|Yn0rfuXwYdw1UTSFOAJMlZsc2wB1PKylyYaYdeWI0c6c2eda
    Task:
      type: object
      properties:
        id:
          type: number
          example: 42
        google_id:
          type: string
          example: abcd1234
        title:
          type: string
          example: New task
        description:
          type: string
          example: Description of the task
        created_at:
          type: string
          example: 2025-03-01T08:28:47.000000Z
        updated_at:
          type: string
          example: 2025-03-01T08:28:47.000000Z
        due_date:
          type: string
          example: 2025-03-01 11:21:00
        user_id:
          type: number
          example: 1
    401_Error:
      type: object
      properties:
        message:
          type: string
          example: Unauthenticated.
    401_Error_Auth:
      type: object
      properties:
        message:
          type: string
          example: Invalid credentials.
    404_Error:
      type: object
      properties:
        message:
          type: string
          example: No query results for model [App\Models\Task] 412.
    422_Error:
      type: object
      properties:
        message:
          type: string
          example: The due date field must be a date after or equal to today.
        errors:
          type: object
          example:
            due_date:
              - The due date field must be a date after or equal to today.
    422_Error_Auth:
      type: object
      properties:
        name:
          type: string
          example: The email has already been taken.
        email:
          type: string
          example: The email has already been taken.
        password:
          type: string
          example: The password field is required.
